<?xml version='1.0' encoding='UTF-8'?>
<!DOCTYPE TaskDefinition PUBLIC "sailpoint.dtd" "sailpoint.dtd">
<TaskDefinition created="1481841694539" executor="sailpoint.reporting.LiveReportExecutor" id="8a85948558c3f169015904a5d74b50b7" modified="1484250798471" name="ACI - Identity Information Report" progressMode="Percentage" resultAction="Delete" subType="ACI" template="true" type="LiveReport">
  <Attributes>
    <Map>
      <entry key="report">
        <value>
          <LiveReport title="Identity Information">
            <DataSource defaultSort="name" objectType="Identity" type="Filter">
              <QueryParameters>
                <Parameter argument="identity" property="id"/>
                <Parameter argument="manager" property="manager.id"/>
                <Parameter argument="identityApplication" property="links.application.id"/>
                <Parameter argument="inactive" property="inactive"/>
                <Parameter argument="identityType" property="identityType"/>
                <Parameter argument="irsStatus" property="irsStatus"/>
                <Parameter argument="company" property="company"/>
                <Parameter argument="personType" property="personType"/>
                <Parameter argument="country" property="country"/>
                <Parameter argument="division" property="division"/>
                <Parameter argument="location" property="location"/>
              </QueryParameters>
            </DataSource>
            <ReportForm>
              <Reference class="sailpoint.object.Form" id="8a85948558c3f169015904a3f8f450b5" name="ACI - Identity Information Report Form"/>
            </ReportForm>
            <Columns>
              <ReportColumnConfig field="created" header="Created" property="created" sortable="true" width="110"/>
              <ReportColumnConfig field="correlated" header="Authoratative" property="correlated" sortable="true" width="110"/>
              <ReportColumnConfig field="identityType" header="Identity Type" property="identityType" sortable="true" width="110"/>
              <ReportColumnConfig field="personId" header="PersonID" property="personId" sortable="true" width="110"/>
              <ReportColumnConfig field="identity" header="rept_user_details_col_identity" property="name" sortable="true" width="110"/>
              <ReportColumnConfig field="lastName" header="rept_user_details_col_lastname" property="lastname" sortable="true" width="110"/>
              <ReportColumnConfig field="firstName" header="rept_user_details_col_firstname" property="firstname" sortable="true" width="110"/>
              <ReportColumnConfig field="personType" header="Person Type" property="personType" sortable="true" width="110"/>
              <ReportColumnConfig field="location" header="Location" property="location" sortable="true" width="110"/>
              <ReportColumnConfig field="email" header="Email" property="email" sortable="true" width="110"/>
              <ReportColumnConfig field="networkId" header="NetworkID" property="networkId" sortable="true" width="110"/>
              <ReportColumnConfig field="manager" header="Manager" hidden="true" property="name" sortable="true" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                                                                
                                String managerName = "";
                                try { managerName  = identityObj.getManager().getDisplayName(); } catch ( Exception e ) {} 
                    
                    						return managerName;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="division" header="Division" hidden="true" property="division" sortable="true" width="110"/>
              <ReportColumnConfig field="department" header="Department" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                    						String identityDept = identityObj.getAttribute("DEPT_NAME");
                    						return identityDept;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="company" header="Company" hidden="true" property="company" sortable="true" width="110"/>
              <ReportColumnConfig field="title" header="Title" hidden="true" property="employeeTitle" sortable="true" width="110"/>
              <ReportColumnConfig field="rank" header="Rank" hidden="true" property="rank" sortable="true" width="110"/>
              <ReportColumnConfig field="phone" header="Phone" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                    						Identity identityObj = context.getObjectByName(Identity.class,value);
                                String phone = identityObj.getAttribute("WORK_TELEPHONE");
                    						return phone;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="country" header="Country" hidden="true" property="country" sortable="true" width="110"/>
              <ReportColumnConfig field="address" header="Address" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                    						String address = identityObj.getAttribute("address");
                    						return address;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="region" header="Region" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                    						String region = identityObj.getAttribute("region");
                    						return region;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="city" header="City" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                    						String city = identityObj.getAttribute("city");
                    						return city;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="postalCode" header="Postal Code" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                    						String postalCode = identityObj.getAttribute("postalCode");
                    						return postalCode;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="startDate" header="Employment Start" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                    						String startDate = identityObj.getAttribute("EMP_START_DATE");
                    						return startDate;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="enterpriseStartDate" header="Enterprise Start Date" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                    						String enterpriseStartDate = identityObj.getAttribute("enterpriseStartDate");
                    						return enterpriseStartDate;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="enterpriseEndDate" header="Enterprise End Date" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                    						String enterpriseEndDate = identityObj.getAttribute("enterpriseEndDate");
                    						return enterpriseEndDate;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="active" header="Active" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                    						boolean active = !identityObj.isInactive();
                    						return active;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="termNotification" header="TERM Notification" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity idenidentityObjtity = context.getObjectByName(Identity.class,value);
                    						String termNotification = identityObj.getAttribute("termNotification");
                    						return termNotification;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="dob" header="Date of Birth" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.Attributes;
                                import sailpoint.object.Identity;

                                Identity identityObj = context.getObjectByName(Identity.class,value);
                    						String dob = identityObj.getAttribute("DATE_OF_BIRTH");
                    						return dob;
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="workflowJoinDate" header="Workflow Joiner Date" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.*;
                                import java.util.Iterator;  
                                import java.text.DateFormat;
                                import java.text.SimpleDateFormat;

                    						Identity identityObj = context.getObjectByName(Identity.class,value);
                    
																List returnObj = new ArrayList();  
                                QueryOptions queryOptions = new QueryOptions(); 
                                queryOptions.addFilter(Filter.eq("action", "identityLifecycleEvent"));  
                                queryOptions.addFilter(Filter.eq("source", "Refresh Identity Cube"));
                                queryOptions.addFilter(Filter.eq("string1", "Fusion Joiner"));
                                queryOptions.addFilter(Filter.eq("target", "Identity:" + identityObj.name));
                    						queryOptions.addOrdering("created",false);
                                
                                DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                                Iterator auditEvents = context.search(AuditEvent.class, queryOptions);

                                 while(auditEvents.hasNext()){  
                                    auditEvent = auditEvents.next();  
                                    return dateFormat.format(auditEvent.getCreated()) ;
                                }                                                
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="workflowTermDate" header="Workflow Leaver Date" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.*;
                                import java.util.Iterator;  
                                import java.text.DateFormat;
                                import java.text.SimpleDateFormat;

                    						Identity identityObj = context.getObjectByName(Identity.class,value);
                    
																List returnObj = new ArrayList();  
                                QueryOptions queryOptions = new QueryOptions(); 
                                queryOptions.addFilter(Filter.eq("action", "identityLifecycleEvent"));  
                                queryOptions.addFilter(Filter.eq("source", "Refresh Identity Cube"));
                                queryOptions.addFilter(Filter.eq("string1", "Fusion Leaver"));
                                queryOptions.addFilter(Filter.eq("target", "Identity:" + identityObj.name));
                    						queryOptions.addOrdering("created",false);
                                
                                DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                                Iterator auditEvents = context.search(AuditEvent.class, queryOptions);

                                 while(auditEvents.hasNext()){  
                                    auditEvent = auditEvents.next();  
                                    return dateFormat.format(auditEvent.getCreated()) ;
                                }                                                
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="workflowTermRemedyDate" header="Workflow Leaver RemedyForce Date" hidden="true" property="name" width="110">
                <RenderScript>
                  <Source>
                                import sailpoint.object.*;
                                import java.util.Iterator;  
                                import java.text.DateFormat;
                                import java.text.SimpleDateFormat;

                    						Identity identityObj = context.getObjectByName(Identity.class,value);
                    
																List returnObj = new ArrayList();  
                                QueryOptions queryOptions = new QueryOptions(); 
                                queryOptions.addFilter(Filter.eq("action", "identityLifecycleEvent"));  
                                queryOptions.addFilter(Filter.eq("source", "Refresh Identity Cube"));
                                queryOptions.addFilter(Filter.eq("string1", "Fusion Leaver RemedyForce"));
                                queryOptions.addFilter(Filter.eq("target", "Identity:" + identityObj.name));
                    						queryOptions.addOrdering("created",false);
                                
                                DateFormat dateFormat = new SimpleDateFormat("MM/dd/yyyy");
                                Iterator auditEvents = context.search(AuditEvent.class, queryOptions);

                                 while(auditEvents.hasNext()){  
                                    auditEvent = auditEvents.next();  
                                    return dateFormat.format(auditEvent.getCreated()) ;
                                }                                                
                  </Source>
                </RenderScript>
              </ReportColumnConfig>
              <ReportColumnConfig field="irsStatus" header="IRS Status" hidden="true" property="irsStatus" width="110"/>
              <ReportColumnConfig field="irsCertDate" header="IRS Cert Date" hidden="true" property="irsCertDate" width="110"/>
            </Columns>
            <InitializationRule>
              <Reference class="sailpoint.object.Rule" id="8a85948558c3f169015904a469ee50b6" name="ACI - Identity Information Report Rule"/>
            </InitializationRule>
          </LiveReport>
        </value>
      </entry>
    </Map>
  </Attributes>
  <Description>A list of Identities and their attributes.  Sort and filter the information.</Description>
  <RequiredRights>
    <Reference class="sailpoint.object.SPRight" id="8a8594824ddf1ff8014ddf202abd0060" name="FullAccessApplicationUserReport"/>
  </RequiredRights>
  <Signature>
    <Inputs>
      <Argument multi="true" name="groupDefinitions" type="string">
        <Description>rept_input_user_report_group_definition</Description>
      </Argument>
      <Argument name="firstname" type="string">
        <Description>rept_input_user_report_fname</Description>
      </Argument>
      <Argument name="lastname" type="string">
        <Description>rept_input_user_report_lname</Description>
      </Argument>
      <Argument name="inactive" type="boolean">
        <Description>rept_input_user_report_inactive</Description>
      </Argument>
      <Argument name="email" type="string">
        <Description>rept_input_user_report_email</Description>
      </Argument>
      <Argument multi="true" name="identityApplication" type="Application">
        <Description>rept_input_user_report_apps</Description>
      </Argument>
      <Argument filterString="managerStatus == true" multi="true" name="manager" type="Identity">
        <Description>Manager Name</Description>
      </Argument>
      <Argument name="email" type="string">
        <Description>rept_input_user_report_email</Description>
      </Argument>
      <Argument multi="true" name="identityApplication" type="Application">
        <Description>rept_input_user_report_apps</Description>
      </Argument>
      <Argument multi="true" name="identityType" type="string">
        <Description>The type of identity.</Description>
      </Argument>
      <Argument multi="true" name="irsStatus" type="string">
        <Description>Status of IRS certification.</Description>
      </Argument>
      <Argument multi="true" name="company" type="string">
        <Description>Company the individual works for.</Description>
      </Argument>
      <Argument multi="true" name="personType" type="string">
        <Description>Person type within HR.</Description>
      </Argument>
      <Argument multi="true" name="country" type="string">
        <Description>Country of individual.</Description>
      </Argument>
      <Argument multi="true" name="division" type="string">
        <Description>Division of individual.</Description>
      </Argument>
      <Argument multi="true" name="location" type="string">
        <Description>Location of individual.</Description>
      </Argument>
    </Inputs>
  </Signature>
</TaskDefinition>
