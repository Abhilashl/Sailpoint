/*
        Rule:  _AuditReport
        Author:  Steve Nuffer
	
	
	Version: 1.0

*/
import org.apache.log4j.Logger; 
import sailpoint.object.*;
import org.apache.jmeter.services.FileServer;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import sailpoint.tools.Util;

//String appName = "PRD Active Directory am.tsacorp.com";
String appName = "PRD Active Directory am.tsacorp.com";
  
String runningASUser = System.getProperty("user.name");

Logger log = Logger.getLogger("com.aci.rule.aci_SourceMapping");
String csvFileName = "\\\\cov6nas02\\slpprdxfr\\sailpoint\\_AuditReport." + runningASUser + ".csv";

DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd");

// Create the File handle
File csvFile = new File(csvFileName);
try
{    
    fileWriter = new PrintWriter( new FileOutputStream( csvFile ));
}
catch ( Exception e )
{
    // User doesn't have permission to write    
    return "Execute from Console OR the file is open";
}

System.out.println("****************  " + appName + "  ****************\n");
Application app = context.getObjectByName(Application.class, appName);

if (null == app) {  
   log.error("Could not find application named:" + appName);  
   return;  
} 

Filter qoFilter = Filter.eq("application", app);

QueryOptions qo = new QueryOptions();  
qo.addFilter(qoFilter);
//qo.setOrderBy("accountName");  
  
//Print to a file
//  Printer header to CSV file
fileWriter.println("identityCreated!idendityPersonID!identityName!identityFname!identityLname!identityTitle!identityType!identityPerType!acctDisplayName!acctSamName!acctMail!acctType");	

Iterator it = context.search(Link.class, qo);  
while (it.hasNext()) {  
    Link link = (Link) it.next();  

    Date identityCreated = null;
    String idendityPersonID = "";
    String identitytName  = "";
    String identityFname = "";
    String identityLname = "";
    String identityTitle = "";
    String identityType = "";
    String identityPerType = "";
    String acctDisplayName = "";
    String acctSamName = "";
    String acctMail = "";
    String acctType = "";

	// Get Identity attributes
	Identity identity = link.getIdentity();
    try { identityCreated = identity.getCreated(); } catch ( Exception e ) {}
    try { idendityPersonID = identity.getStringAttribute("personId"); } catch ( Exception e ) {idendityPersonID = "None";}
    try { identitytName  = identity.getDisplayName(); } catch ( Exception e ) {identitytName = "None";}
    try { identityFname = identity.getFirstname();  } catch ( Exception e ) {identityFname = "None";}
    try { identityLname = identity.getLastname(); } catch ( Exception e ) {identityLname = "None";}
    try { identityTitle = identity.getStringAttribute("employeeTitle"); } catch ( Exception e ) {identityTitle = "None";}
    try { identityType = identity.getStringAttribute("identityType"); } catch ( Exception e ) {identityType = "None";}
    try { identityPerType = identity.getStringAttribute("personType"); } catch ( Exception e ) {identityPerType = "None";}

	// Get application attributes
    Attributes attributes = link.getAttributes();
    try { acctDisplayName = attributes.getString("displayName"); } catch ( Exception e ) {acctDisplayName = "None";}
    try { acctSamName = attributes.getString("sAMAccountName"); } catch ( Exception e ) {acctSamName = "None";}
    try { acctMail = attributes.getString("mail"); } catch ( Exception e ) {acctMail = "None";}
    try { acctType = attributes.getString("accountType"); } catch ( Exception e ) {acctType = "None";}

	//Print row to a file   
    try {
        //System.out.println("****** " + dateFormat.format(identityCreated) + "!" + identitytName);
        fileWriter.println(dateFormat.format(identityCreated) + "!" + idendityPersonID + "!" + identitytName + "!" + identityFname + "!" + identityLname + "!" + identityTitle + "!" + identityType + "!" + identityPerType + "!" + acctDisplayName + "!" + acctSamName + "!" + acctMail + "!" + acctType);	
        System.out.println(dateFormat.format(identityCreated) + "!" + idendityPersonID + "!" + identitytName + "!" + identityFname + "!" + identityLname + "!" + identityTitle + "!" + identityType + "!" + identityPerType + "!" + acctDisplayName + "!" + acctSamName + "!" + acctMail + "!" + acctType);
        ;
    } catch(Exception e) {
        System.out.println("++++ " + identitytName);
    }
}  
 
// Close File handles
fileWriter.flush();
fileWriter.close();

sailpoint.tools.Util.flushIterator(it); 

return "Contents saved to " + csvFileName + "    ***  Delimeter is !  ***";